package main

import (
	"encoding/json"
	"fmt"
	"os"
)

// WIN_TEXT содержит ASCII-арт для победителя.
var WIN_TEXT string = `
                                   .''.       
       .''.      .        *''*    :_\/_:     . 
      :_\/_:   _\(/_  .:.*_\/_*   : /\ :  .'.:.'.
  .''.: /\ :   ./)\   ':'* /\ * :  '..'.  -=:o:=-
 :_\/_:'.:::.    ' *''*    * '.\'/.' _\(/_'.':'.'
 : /\ : :::::     *_\/_*     -= o =-  /)\    '  *
  '..'  ':::'     * /\ *     .'/.\'.   '
      *            *..*         :
        *
        *
`

// LOSER_TEXT содержит ASCII-арт для проигравшего.
var LOSER_TEXT string = `
⠀⠀⠀⠀⠀⠀⢀⣀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠁⠈⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠂⡰⡆⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠠⣞⣟⣹⢧⣄⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣶⣿⡾⢛⢻⣷⠀⠀⠀⠀⠀
⠀⠀⠀⢀⣾⡟⠛⢻⣷⣝⣦⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣠⣤⣤⣤⣀⣀⣀⣾⣧⡿⢉⠰⢠⢨⣿⠁⠀⠀⠀⠀
⠀⠠⣯⣹⣿⢀⠣⠠⡙⣿⣌⢷⣦⣤⣀⣤⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠠⣾⣿⣿⠿⣿⣿⣹⣿⣿⡟⡁⠆⡑⢂⡼⣿⣠⡀⠀⠀⠀
⠀⢐⣿⡿⢟⣆⠢⠑⡄⢹⣿⣿⣿⣿⠛⠍⡛⣿⣶⣤⠂⠀⠀⠀⠀⠀⠀⠀⣯⣿⣇⠂⠌⢿⣿⢿⡟⠡⠐⡌⡐⢢⠳⢉⡉⢿⣦⠀⠀
⣿⣿⡃⡐⡈⠻⣧⢈⠰⢀⠛⣿⣿⠃⠌⡒⣱⣿⣷⡏⠀⠀⠀⠀⠀⠀⠀⠀⠻⣞⣿⣎⠰⢈⠙⡋⠔⣁⠣⡐⠡⡉⠔⠢⡐⢈⣿⠆⠀
⣷⣿⣡⠐⠤⡑⡀⠆⡑⠢⠌⣈⢉⡐⢂⠱⣼⣏⡿⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢾⣿⢷⡄⠊⡔⠡⢂⠔⠡⡁⠆⡉⢆⠁⣞⢻⣦⡀
⣿⣾⣿⣶⠆⡑⠌⢂⠡⢃⠒⢄⠢⠘⢦⣷⣿⡞⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⡻⣾⣿⣔⢀⠃⢆⡘⠰⠠⠑⡰⢀⠎⣀⠂⢸⣿
⣿⣿⡋⠄⢢⠑⡌⠂⡅⢊⠔⡨⢀⢃⣾⡟⡛⠷⡴⣋⣭⣷⣶⣶⣶⣶⣶⣦⣶⣾⣭⣽⣚⢾⡿⣷⣬⡀⠌⣁⠣⠑⡐⠢⢈⠤⠑⣼⡿
⣿⡹⣷⣌⠄⠃⡌⠰⡈⠆⢂⠡⣢⣾⣿⢃⣷⡿⠟⢛⠩⢉⣷⠔⡠⢶⣄⡐⡈⠌⣉⠙⢛⠻⢷⣮⣟⠻⢷⣶⣤⣧⣤⣑⣦⣤⣿⠟⠁
⠀⠉⠻⣽⣻⢷⣄⣃⣐⣨⣴⣿⠟⣃⣴⡟⠩⢐⠨⣤⣾⡿⢋⠰⠀⢭⠻⢿⣶⣬⣤⣘⣠⣈⠄⡉⠻⢿⣮⠻⡿⠿⠉⠉⠛⠋⠁⠀⠀
⠀⠀⠀⠀⠈⠙⠽⠿⠛⢻⣭⣷⣾⡟⠳⠶⢷⠾⠟⢋⣱⣶⢆⢣⡙⢾⣷⣤⡈⢉⠍⠛⠛⢋⡐⠌⡐⢂⠹⣿⣌⢤⡀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠀⣰⣿⡿⢃⠐⡢⢁⠆⠰⣨⣿⣿⢏⡜⣢⢝⣚⣿⣿⣿⣤⠊⠔⡑⠢⠌⢢⠁⢆⠡⢈⢿⣦⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣼⢳⡿⠁⢆⠱⢀⢃⣬⣷⣿⡿⢯⡟⡼⠥⡏⢞⠳⣟⣿⣿⣷⣮⣤⣁⠊⡄⠡⢊⠐⡂⠌⣿⡆⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠰⣷⣿⠃⡜⠠⣳⣾⣿⣿⢿⡻⡵⢏⠞⡴⢫⢜⡣⡝⡸⢧⣟⣻⠿⣿⣿⣿⣿⣇⠂⡱⢈⠰⢸⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⣼⣻⡟⢰⠠⠉⣿⡯⡝⣜⡲⣿⠈⠎⡽⢌⡳⢌⡖⡍⠖⡃⠌⣹⡿⣔⡲⡱⢾⣧⠂⢡⠊⡄⢹⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⢪⠇⡈⣿⣱⢹⢦⡹⣿⠀⢍⣰⣦⣶⣷⣶⣾⣴⣀⠃⠼⣿⡰⢳⣍⢻⣷⠈⢢⠑⡠⢹⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⠥⡙⢆⠡⣿⣥⢫⡖⣭⣿⢠⣿⣿⣿⣿⣿⣿⣿⣿⣿⣷⡈⣿⡱⣏⠼⣹⣯⠐⢂⠱⣀⢹⣿⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⣿⡇⡘⡅⢂⣿⢖⡳⣚⢴⣻⣿⣿⣿⣻⢏⡿⣽⣻⣿⣿⣿⣿⡼⢳⢭⡚⡽⣷⠈⢌⡒⢤⣿⠇⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⢻⣧⠐⡌⠄⣿⢎⡵⣍⢮⣽⣿⣿⣷⠿⠿⠿⢷⣷⣿⣿⣿⣿⡗⡹⢶⡹⣜⣿⠀⢊⢥⣾⠏⠀⠀⠀⠀⠀⠀⠀
⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣇⠌⢂⣿⣚⠼⡜⢦⣿⠟⡉⠄⣒⠨⣐⠄⡠⠌⡙⠛⢻⣭⡓⣧⠳⣼⡏⢰⣡⡿⣋⠄⠀⠀⠀⠀⠀⠀⠀
⠂⠀⠀⠀⠀⠀⠀⠀⠀⠈⠻⣷⣄⢺⣥⢻⡙⣎⣿⠀⡔⠡⣈⡇⠘⣆⠐⢢⠐⡉⢸⣷⡹⣜⠳⣜⣧⣿⢋⠠⠃⠀⠀⠀⠀⠀⠀⠀⠀
⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢻⣻⢷⣮⣧⡙⡖⣿⠐⠨⠑⡠⠉⡔⠠⡉⠄⠃⢌⠘⣷⣳⣼⡿⢿⡋⠈⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⡁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠉⠓⠯⠛⠿⢷⣧⣬⣥⣆⣡⣒⣤⣁⣦⣭⣼⣶⠿⣟⣏⠷⠞⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
⠀⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣈⣙⢸⣉⡍⠛⠙⠛⠛⢻⡙⡏⢡⢒⣼⣉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀
`

// GameFinal завершает игру и выводит результаты в зависимости от данных персонажа.
func GameFinal(id int, objs *[]mapObject) error {
	// Инициализация переменной char для хранения данных о персонаже.
	var char characterObject

	// Поиск персонажа по ID в переданных объектах.
	for _, v := range *objs {
		if c, ok := v.(*characterObject); ok {
			if c.CharacterID == id {
				char = *c
				break
			}
		}
	}

	// Инициализация переменной data для хранения данных персонажа из файла.
	data := characterData{}

	// Чтение содержимого файла с настройками персонажа.
	content, err := os.ReadFile(char.SettingFile)
	if err != nil {
		return fmt.Errorf("Ошибка чтения файла")
	}

	// Разбор содержимого файла как JSON и сохранение данных в переменной data.
	err = json.Unmarshal(content, &data)
	if err != nil {
		return fmt.Errorf("Ошибка разбора JSON")
	}

	// Проверка, является ли персонаж убийцей, и вывод соответствующего сообщения.
	if data.IsKiller {
		fmt.Println(WIN_TEXT)
		fmt.Println("Вы Разгадали это дело!", data.Name, "- убийца!")
	} else {
		fmt.Println(LOSER_TEXT)
		fmt.Println("Вы повесили невинного:", data.Name, ", убийства в Лунном зеркальце продолжатся.")
	}

	// Возвращаем nil, чтобы указать, что функция выполнена без ошибок.
	return nil
}
